---
title: "Homework-3"
author: "Eliana Shandalov"
format: html
---

Link to GitHub Repository: https://github.com/eliana427/ENVS-193DS_homework-03.git
```{r}
library(tidyverse)
install.packages("here")
library(here)
library(flextable)
library(janitor)
install.packages("readxl")
library(readxl)
```

Problem 1. Personal data

a. Data summarizing

I am comparing counts between groups, the "yes" on the phone group and the "no" on the phone group because I am comparing the number of minutes it takes me to walk to the IV tunnel from my house depending on if I am talking on the phone or not, which is informative because theoretically I think I walk slower when I am on the phone because I am less focused on walking. I will take the mean of each group and compare the means, while also taking the minimum and maximum, so the range will also be helpful, but I do not need to add numbers together unless it is part of my process for taking the means of each group.

b. Visualization

```{r}
library(janitor)
my_data <- read_csv("my_data.csv")   # read from sample data.csv data frame, store as object


```

```{r}
clean_data <- my_data %>% # store data as object to be cleaned, will be using clean data set
  clean_names() # clean the names in the data, spaces to underscores and all lowercase
```

```{r}
ggplot(data = clean_data,
       aes(x = on_the_phone,
           y = time_it_takes_me_to_walk_to_tunnel_min,
           color = on_the_phone)) +
  geom_boxplot() +
  geom_jitter(position = position_jitter(width = 0.2,
                                         height = 0)) +
  labs(x = "On the phone (yes/no)",
       y = "Time to walk to IV tunnel (minutes)",
       color = "On the phone") +
  scale_color_manual(values = c("firebrick4", "forestgreen"))
```

```{r}
mean__yes <- clean_data |> 
  filter(on_the_phone == "Yes") |> 
  summarize(mean_yes = mean(duration, na.rm = TRUE))


```


```{r}
yes_phone <- c(20, 21, 20, 18, 18, 20, 18, 19, 19, 22, 21, 23, 22, 21)
mean(yes_phone)

no_phone <- c(19, 16, 15, 17, 23, 18, 19, 21, 21, 18, 15, 19, 18, 20, 22, 18)
mean(no_phone)
```

